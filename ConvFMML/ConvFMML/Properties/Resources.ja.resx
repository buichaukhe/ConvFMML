<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Disabled" xml:space="preserve">
    <value>無効</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>有効</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>エラー</value>
  </data>
  <data name="ErrorConverterFailedToIntermediate" xml:space="preserve">
    <value>分解能の変換に失敗しました。</value>
  </data>
  <data name="ErrorConverterFailedToMML" xml:space="preserve">
    <value>MML形式のデータへの変換に失敗しました。</value>
  </data>
  <data name="ErrorMIDIBroken" xml:space="preserve">
    <value>ファイル"{0}"は、データが壊れているため読み込めませんでした。</value>
  </data>
  <data name="ErrorMIDIFormat1" xml:space="preserve">
    <value>MIDIデータのフォーマット1への変換に失敗しました。</value>
  </data>
  <data name="ErrorMIDIReadFailed" xml:space="preserve">
    <value>ファイル"{0}"の読み込みに失敗しました。</value>
  </data>
  <data name="ErrorMMLFailed" xml:space="preserve">
    <value>MMLデータの"{0}"への出力に失敗しました。</value>
  </data>
  <data name="ErrorModifierCutByBar" xml:space="preserve">
    <value>小節による音符・休符のカットに失敗しました。</value>
  </data>
  <data name="ErrorModifierCutByCommands" xml:space="preserve">
    <value>音符・休符のコマンドによるカットに失敗しました。</value>
  </data>
  <data name="ErrorModifierOptimizeSamePlaceType" xml:space="preserve">
    <value>同位置同種のコマンドの処理に失敗しました。</value>
  </data>
  <data name="ErrorModifierOptimizeSameTypeValue" xml:space="preserve">
    <value>宣言済みコマンドの削除に失敗しました。</value>
  </data>
  <data name="ErrorModifierPartReconstruct" xml:space="preserve">
    <value>パートの再構築に失敗しました。</value>
  </data>
  <data name="ErrorModifierRemoveUselessCommands" xml:space="preserve">
    <value>音符に影響を与えないコマンドの削除に失敗しました。</value>
  </data>
  <data name="ExportAs" xml:space="preserve">
    <value>名前を付けて保存</value>
  </data>
  <data name="FailedTitle" xml:space="preserve">
    <value>変換失敗</value>
  </data>
  <data name="InputMIDIDIalogTitle" xml:space="preserve">
    <value>変換するMIDIを参照</value>
  </data>
  <data name="MainMenuControlCommands" xml:space="preserve">
    <value>各種コマンド</value>
  </data>
  <data name="MainMenuGeneral" xml:space="preserve">
    <value>全体設定</value>
  </data>
  <data name="MainMenuMMLExpression1" xml:space="preserve">
    <value>MML表現(1)</value>
  </data>
  <data name="MainMenuMMLExpression2" xml:space="preserve">
    <value>MML表現(2)</value>
  </data>
  <data name="MainMenuNoteRest1" xml:space="preserve">
    <value>音符・休符(1)</value>
  </data>
  <data name="MainMenuNoteRest2" xml:space="preserve">
    <value>音符・休符(2)</value>
  </data>
  <data name="MainMenuPan" xml:space="preserve">
    <value>パン</value>
  </data>
  <data name="MainMenuPart" xml:space="preserve">
    <value>出力パート</value>
  </data>
  <data name="MainMenuProgramChange" xml:space="preserve">
    <value>プログラムチェンジ</value>
  </data>
  <data name="MainMenuTempo" xml:space="preserve">
    <value>テンポ</value>
  </data>
  <data name="MainMenuVolume" xml:space="preserve">
    <value>音量</value>
  </data>
  <data name="OverMeasureC4" xml:space="preserve">
    <value>分割しない(c4)</value>
  </data>
  <data name="OverMeasureC8And8" xml:space="preserve">
    <value>分割する(c8&amp;8)</value>
  </data>
  <data name="OverMeasureC8AndC8" xml:space="preserve">
    <value>分割する(c8&amp;c8)</value>
  </data>
  <data name="OverMeasureC8Hat8" xml:space="preserve">
    <value>分割する(c8^8)</value>
  </data>
  <data name="PanLCR" xml:space="preserve">
    <value>左、中央、右の3種類で出力</value>
  </data>
  <data name="PanMIDI" xml:space="preserve">
    <value>MIDI値を出力</value>
  </data>
  <data name="PanP" xml:space="preserve">
    <value>P数値(0～255)</value>
  </data>
  <data name="PanPLPCPR" xml:space="preserve">
    <value>PL数値(1～127)、PC、PR数値(1～127)</value>
  </data>
  <data name="PartAuto" xml:space="preserve">
    <value>自動で割り当てて出力</value>
  </data>
  <data name="PartCustom" xml:space="preserve">
    <value>それぞれ指定して出力</value>
  </data>
  <data name="PartDisabled" xml:space="preserve">
    <value>出力しない</value>
  </data>
  <data name="PartNoteExist" xml:space="preserve">
    <value>あり</value>
  </data>
  <data name="PartNoteNone" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="StatusBarArrange" xml:space="preserve">
    <value>データ整形中...</value>
  </data>
  <data name="StatusBarComplete" xml:space="preserve">
    <value>変換完了</value>
  </data>
  <data name="StatusBarExport" xml:space="preserve">
    <value>MML出力中...</value>
  </data>
  <data name="StatusBarFailed" xml:space="preserve">
    <value>変換失敗</value>
  </data>
  <data name="StatusBarLoad" xml:space="preserve">
    <value>"{0}"を読み込み中...</value>
  </data>
  <data name="StatusBarReady" xml:space="preserve">
    <value>準備完了</value>
  </data>
  <data name="StatusBarTimeBase" xml:space="preserve">
    <value>分解能を変更中...</value>
  </data>
  <data name="SuccessText" xml:space="preserve">
    <value>MIDIをMMLに変換しました。</value>
  </data>
  <data name="SuccessTitle" xml:space="preserve">
    <value>変換完了</value>
  </data>
  <data name="TieLengthStyleC4And16" xml:space="preserve">
    <value>c4&amp;16表記</value>
  </data>
  <data name="TieLengthStyleC4AndC16" xml:space="preserve">
    <value>c4&amp;c16表記</value>
  </data>
  <data name="TieLengthStyleC4Hat16" xml:space="preserve">
    <value>c4^16表記</value>
  </data>
  <data name="TimeBasePMDC" xml:space="preserve">
    <value>Cコマンドで出力</value>
  </data>
  <data name="TimeBasePMDZenlen" xml:space="preserve">
    <value>#Zenlenコマンドで出力</value>
  </data>
</root>