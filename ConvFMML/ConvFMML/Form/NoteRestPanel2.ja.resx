<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="titleLabel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAd4AAAAXCAYAAAClDi4LAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA21JREFUeF7t1dWaUGUYgFHs7u7u7u7CFrsb7A5s7E7sLpqhe+jubobuIWcQdASd
        37339z7cgWfvwbqGVSM1rJHCOqHRulgP66fUeANsiI1Ck41T9VqbYNPQdLPM5tgiNNsSW2FrbJOqm+e2
        xXbYHjuk6pLcjoV/S3bCzqHFLtgVu2H30HIP7Im9Qqu9sQ/2Da33w/44oPBPmwNxEA4ObQ/BoTgstDsc
        R+DI0P4oHI1jQodjcRyOL6zpeAJOxEmh08k4BaeGzqfhdJyBM9OaLrmzcDbOCaXn4rzC6tLzcUHoeiEu
        Qk1cnFZ3y12CS3FZ6H45rsCVocdVqIWrC3/3vAbX4rrQ63rcgBtD75twM24JfW7Fbbg99L0Dd+KuQlW/
        u3EP7g39a6MO7gsD7scDeDAMfAgP45Ew6FE8hsfD4CfwJJ4KQ57GM3g2DK2L5/B85oVUNSz3Il7Cy3gl
        VQ3P1cOr6a/Ca2HE63gDb+KtMPJtvIN3w6j38D4+CKM/xEf4uPDnmE/wKT4LY+vjc3wRxn2Jr/B1GP8N
        vsV3YcL3+AE/FlZN/Ak/45cw6Vf8ht/D5AZoiEZonFZNyTVBUzQLZc1RUlhZ1gItw9RWaI02aJtWTsu1
        Q3t0CNM7ohM6hxldUIquhT9mdkN39AizeqIXeofZfdAX/cKc/hiAgWHuIAzGkMKKeUMxDMPD/BEYiVFh
        wWiMwdiwcBzGYwImhvJJmFyoLJ+CslS5KDcV0zAdM1Ll4txMzMLssGQO5mJeWDofC7AwVS4rTxVrLcLi
        sHwJlmJZqFieqUjGa7wZ4zVe4zVe4zVe4y3SNV7jNV7jNV7jjXSNN9I13ozxGq/xGq/xGq/xZozXeI3X
        eI3XeI2XdI3XeI3XeI3XeI03GK/xGi+M13iN13iNN2O8xmu8xmu8xmu8pGu8xmu8xmu8xmu8MF7jNV7j
        NV7jNd6M8Rqv8Rqv8Rqv8Rqv8Rqv8QbjhfEar/Ear/GSrvEar/Ear/Ear/EG4w3GS7rGa7zGa7zGG4wX
        xmu8xmu8xmu8xku6xmu8xmu8xgvjNV7jNV7jNV7jNV7jzRhvMF7jNV7jNV4Yr/Ear/Ear/Ear/Ear/Ea
        bzBeGK/xGq/xGi/pGq/xGq/xGq/xGm8w3mC8pGu8xmu8xmu8wXhhvMZrvMb7f8Vbkf4DbYtieWLw5JcA
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="titleLabel.Text" xml:space="preserve">
    <value>音符・休符(2)</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>タイコマンド指定</value>
  </data>
  <data name="checkBox3.Size" type="System.Drawing.Size, System.Drawing">
    <value>171, 16</value>
  </data>
  <data name="checkBox3.Text" xml:space="preserve">
    <value>休符にタイコマンドを使用しない</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>小節をまたぐ音符・休符の表記</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>タイコマンドを使用した音長設定</value>
  </data>
  <data name="checkBox2.Size" type="System.Drawing.Size, System.Drawing">
    <value>141, 16</value>
  </data>
  <data name="checkBox2.Text" xml:space="preserve">
    <value>途中でブロック分けを行う</value>
  </data>
</root>